{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "devdatafactorytest9089"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-24T00:46:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL3_satatus_setup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Switch Status",
						"description": "success or failure ",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.status",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "Success",
									"activities": [
										{
											"name": "PL_status_success_message",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "PL1_send_email_notificcation_copy",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"Systemcode": {
														"value": "@pipeline().parameters.systemCode",
														"type": "Expression"
													},
													"datasetName": {
														"value": "@pipeline().parameters.datasetName",
														"type": "Expression"
													},
													"subject": {
														"value": "@concat('ADF Pipeline:',pipeline().parameters.tiggeredPipeline)",
														"type": "Expression"
													},
													"message": {
														"value": "@concat(pipeline().parameters.tiggeredPipeline, 'has completed successfully')",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "Failed",
									"activities": [
										{
											"name": "PL_status_failed_message",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "PL1_send_email_notificcation_copy",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"Systemcode": {
														"value": "@pipeline().parameters.systemCode",
														"type": "Expression"
													},
													"datasetName": {
														"value": "@pipeline().parameters.datasetName",
														"type": "Expression"
													},
													"subject": {
														"value": "@concat('ADF Pipeline:',pipeline().parameters.tiggeredPipeline)",
														"type": "Expression"
													},
													"message": {
														"value": "@concat(pipeline().parameters.tiggeredPipeline, 'has failed please check ')",
														"type": "Expression"
													}
												}
											}
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "PL_status_default",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL1_send_email_notificcation_copy",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Systemcode": {
												"value": "@pipeline().parameters.systemCode",
												"type": "Expression"
											},
											"datasetName": {
												"value": "@pipeline().parameters.datasetName",
												"type": "Expression"
											},
											"subject": {
												"value": "@concat('ADF Pipeline:',pipeline().parameters.tiggeredPipeline)",
												"type": "Expression"
											},
											"message": {
												"value": "@concat(pipeline().parameters.tiggeredPipeline, 'has no valied status:',pipeline().parameters.status,'expecting failed or success')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"status": {
						"type": "string"
					},
					"tiggeredPipeline": {
						"type": "string"
					},
					"systemCode": {
						"type": "string"
					},
					"datasetName": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-27T08:22:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL5_ingest_ws_sales_end_to_end_email_log_working')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Ingest Webstore Online Sales Data into Data Lake ",
				"activities": [
					{
						"name": "copydataonline",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Online_adls_Sales_Json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DSdls_dataengineer_sales_Json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sendemailnotification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL1_send_email_notificcation_copy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Systemcode": {
									"value": "@pipeline().parameters.SystemCode",
									"type": "Expression"
								},
								"datasetName": {
									"value": "@pipeline().parameters.DatasetName",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copydataonline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertPipelineLog]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertFromUtc(utcNow(),'GMT Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().parameters.runID",
										"type": "Expression"
									},
									"type": "String"
								},
								"SnapshotDate": {
									"value": {
										"value": "@formatDateTime(pipeline().parameters.snapshotDate,'yyyy-MM-dd')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"SourceToTargetID": {
									"value": {
										"value": "2",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StartTime": {
									"value": {
										"value": "@convertFromUtc(pipeline().TriggerTime,'GMT Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "Success ",
										"type": "Expression"
									},
									"type": "String"
								},
								"UpdateAt": {
									"value": {
										"value": "@convertFromUtc(utcNow(),'GMT Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_Azure_sql",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SystemCode": {
						"type": "string",
						"defaultValue": "OWS"
					},
					"DatasetName": {
						"type": "string",
						"defaultValue": "Sales"
					},
					"runID": {
						"type": "string",
						"defaultValue": "1"
					},
					"snapshotDate": {
						"type": "string",
						"defaultValue": "2021-07-11"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-27T08:22:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL6_log_pipeline_metadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "test_status",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.status,'Success')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Log pipeline information metada_statusfailed",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[InsertPipelineLog]",
										"storedProcedureParameters": {
											"EndTime": {
												"value": {
													"value": "@convertFromUtc(utcNow(),'GMT Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().parameters.PipelineID",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineName": {
												"value": {
													"value": "@pipeline().parameters.pipelineName",
													"type": "Expression"
												},
												"type": "String"
											},
											"RunID": {
												"value": {
													"value": "@pipeline().parameters.PipelineID",
													"type": "Expression"
												},
												"type": "String"
											},
											"SnapshotDate": {
												"value": {
													"value": "@pipeline().parameters.snapshotDate",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"SourceToTargetID": {
												"value": {
													"value": "@pipeline().parameters.sourcetoTargetID",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"StartTime": {
												"value": {
													"value": "@pipeline().parameters.PipelineTiggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												},
												"type": "String"
											},
											"UpdateAt": {
												"value": {
													"value": "@convertFromUtc(utcNow(),'GMT Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_Azure_sql",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "PL_set_status_and_send_messages_copy1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Log pipeline information metada_statusfailed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL3_satatus_setup",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"status": {
												"value": "@pipeline().parameters.status",
												"type": "Expression"
											},
											"tiggeredPipeline": {
												"value": "@pipeline().parameters.pipelineName",
												"type": "Expression"
											},
											"systemCode": {
												"value": "@pipeline().parameters.systemCode",
												"type": "Expression"
											},
											"datasetName": {
												"value": "@pipeline().parameters.datasetName",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Log pipeline information metadd_sucess",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[InsertPipelineLog]",
										"storedProcedureParameters": {
											"EndTime": {
												"value": {
													"value": "@convertFromUtc(utcNow(),'GMT Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().parameters.PipelineID",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineName": {
												"value": {
													"value": "@pipeline().parameters.pipelineName",
													"type": "Expression"
												},
												"type": "String"
											},
											"RunID": {
												"value": {
													"value": "@pipeline().parameters.PipelineID",
													"type": "Expression"
												},
												"type": "String"
											},
											"SnapshotDate": {
												"value": {
													"value": "@pipeline().parameters.snapshotDate",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"SourceToTargetID": {
												"value": {
													"value": "@pipeline().parameters.sourcetoTargetID",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"StartTime": {
												"value": {
													"value": "@pipeline().parameters.PipelineTiggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												},
												"type": "String"
											},
											"UpdateAt": {
												"value": {
													"value": "@convertFromUtc(utcNow(),'GMT Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_Azure_sql",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"snapshotDate": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"runID": {
						"type": "string"
					},
					"sourcetoTargetID": {
						"type": "string"
					},
					"PipelineTiggerTime": {
						"type": "string"
					},
					"PipelineID": {
						"type": "string"
					},
					"pipelineName": {
						"type": "string"
					},
					"systemCode": {
						"type": "string"
					},
					"datasetName": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-27T12:11:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL3_satatus_setup')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL6_log_pipeline_metadata1_old')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Log pipeline information metada",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertPipelineLog]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertFromUtc(utcNow(),'GMT Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineID": {
									"value": {
										"value": "@pipeline().parameters.PipelineID",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().parameters.pipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().parameters.PipelineID",
										"type": "Expression"
									},
									"type": "String"
								},
								"SnapshotDate": {
									"value": {
										"value": "@pipeline().parameters.snapshotDate",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"SourceToTargetID": {
									"value": {
										"value": "@pipeline().parameters.sourcetoTargetID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StartTime": {
									"value": {
										"value": "@pipeline().parameters.PipelineTiggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@pipeline().parameters.status",
										"type": "Expression"
									},
									"type": "String"
								},
								"UpdateAt": {
									"value": {
										"value": "@convertFromUtc(utcNow(),'GMT Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_Azure_sql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PL_set_status_and_send_messages",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Log pipeline information metada",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL3_satatus_setup",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"status": {
									"value": "@pipeline().parameters.status",
									"type": "Expression"
								},
								"tiggeredPipeline": {
									"value": "@pipeline().parameters.pipelineName",
									"type": "Expression"
								},
								"systemCode": {
									"value": "@pipeline().parameters.systemCode",
									"type": "Expression"
								},
								"datasetName": {
									"value": "@pipeline().parameters.datasetName",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"snapshotDate": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"runID": {
						"type": "string"
					},
					"sourcetoTargetID": {
						"type": "string"
					},
					"PipelineTiggerTime": {
						"type": "string"
					},
					"PipelineID": {
						"type": "string"
					},
					"pipelineName": {
						"type": "string"
					},
					"systemCode": {
						"type": "string"
					},
					"datasetName": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-27T12:11:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL3_satatus_setup')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL10_data_ingestion_')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Ingest Webstore Online Sales Data into Data Lake ",
				"activities": [
					{
						"name": "copydataonline",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Online_adls_Sales_Json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DSdls_dataengineer_sales_Json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Set Sucess status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "copydataonline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_status",
							"value": "Success"
						}
					},
					{
						"name": "Set failed status_",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "copydataonline",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_status",
							"value": "failed"
						}
					},
					{
						"name": "PL6_log_pipeline_metadata_sucess",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set Sucess status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL6_log_pipeline_metadata1_old",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"snapshotDate": {
									"value": "@formatDateTime(pipeline().parameters.snapshotDate,'yyyy-MM-dd')",
									"type": "Expression"
								},
								"status": {
									"value": "@variables('v_status')",
									"type": "Expression"
								},
								"runID": {
									"value": "@pipeline().parameters.runID",
									"type": "Expression"
								},
								"sourcetoTargetID": "2",
								"PipelineTiggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"PipelineID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"systemCode": {
									"value": "@pipeline().parameters.SystemCode",
									"type": "Expression"
								},
								"datasetName": {
									"value": "@pipeline().parameters.DatasetName",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "PL6_log_pipeline_metadata_failed",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set failed status_",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL6_log_pipeline_metadata1_old",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"snapshotDate": {
									"value": "@formatDateTime(pipeline().parameters.snapshotDate,'yyyy-MM-dd')",
									"type": "Expression"
								},
								"status": {
									"value": "@variables('v_status')",
									"type": "Expression"
								},
								"runID": {
									"value": "@pipeline().parameters.runID",
									"type": "Expression"
								},
								"sourcetoTargetID": "2",
								"PipelineTiggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"PipelineID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"systemCode": {
									"value": "@pipeline().parameters.SystemCode",
									"type": "Expression"
								},
								"datasetName": {
									"value": "@pipeline().parameters.DatasetName",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SystemCode": {
						"type": "string",
						"defaultValue": "OWS"
					},
					"DatasetName": {
						"type": "string",
						"defaultValue": "Sales"
					},
					"runID": {
						"type": "string",
						"defaultValue": "1"
					},
					"snapshotDate": {
						"type": "string",
						"defaultValue": "2021-07-11"
					}
				},
				"variables": {
					"v_status": {
						"type": "String",
						"defaultValue": "Success"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-27T17:44:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL6_log_pipeline_metadata1_old')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL11_data_ingestionv6')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Ingest Webstore Online Sales Data into Data Lake ",
				"activities": [
					{
						"name": "get source to target details",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[GetSourceToTargetInfo]",
								"storedProcedureParameters": {
									"Dataset": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.DatasetName",
											"type": "Expression"
										}
									},
									"SourceSystemCode": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.SystemCode",
											"type": "Expression"
										}
									},
									"Stage": {
										"type": "String",
										"value": {
											"value": "@variables('v_stage')",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AQL_source_tartget",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachsourcetotarget",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get source to target details",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get source to target details').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "copydataonline",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": true
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureDataLakeStorage1",
												"type": "LinkedServiceReference"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_Online_adls_Sales_files_Json",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@item().SourceContainer",
													"type": "Expression"
												},
												"directory": {
													"value": "@item().SourceRelativePathSchema\n",
													"type": "Expression"
												},
												"fileName": {
													"value": "@item().SourceTechnicalName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DSdls_dataengineer_folder_json",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@item().TargetContainer",
													"type": "Expression"
												},
												"directory": {
													"value": "@concat(item().TargetRelativePathSchema,'/',formatDateTime(pipeline().parameters.snapshotDate,'yyyy-MM-dd'))",
													"type": "Expression"
												},
												"fileName": {
													"value": "@item().TargetTechnicalName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set Sucess status",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "copydataonline",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "v_status",
										"value": "Success"
									}
								},
								{
									"name": "Set failed status",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "copydataonline",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "v_status",
										"value": "failed"
									}
								},
								{
									"name": "PL6_log_pipeline_metadata_sucess",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set Sucess status",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL6_log_pipeline_metadata1_old",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"snapshotDate": {
												"value": "@formatDateTime(pipeline().parameters.snapshotDate,'yyyy-MM-dd')",
												"type": "Expression"
											},
											"status": {
												"value": "@variables('v_status')",
												"type": "Expression"
											},
											"runID": {
												"value": "@pipeline().parameters.runID",
												"type": "Expression"
											},
											"sourcetoTargetID": {
												"value": "@item().sourcetoTargetID",
												"type": "Expression"
											},
											"PipelineTiggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"PipelineID": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											},
											"pipelineName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"systemCode": {
												"value": "@pipeline().parameters.SystemCode",
												"type": "Expression"
											},
											"datasetName": {
												"value": "@pipeline().parameters.DatasetName",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "PL6_log_pipeline_metadata_failed",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set failed status",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL6_log_pipeline_metadata1_old",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"snapshotDate": {
												"value": "@formatDateTime(pipeline().parameters.snapshotDate,'yyyy-MM-dd')",
												"type": "Expression"
											},
											"status": {
												"value": "@variables('v_status')",
												"type": "Expression"
											},
											"runID": {
												"value": "@pipeline().parameters.runID",
												"type": "Expression"
											},
											"sourcetoTargetID": {
												"value": "@item().sourcetoTargetID",
												"type": "Expression"
											},
											"PipelineTiggerTime": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											},
											"PipelineID": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											},
											"pipelineName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"systemCode": {
												"value": "@pipeline().parameters.SystemCode",
												"type": "Expression"
											},
											"datasetName": {
												"value": "@pipeline().parameters.DatasetName",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SystemCode": {
						"type": "string",
						"defaultValue": "OWS"
					},
					"DatasetName": {
						"type": "string",
						"defaultValue": "Sales"
					},
					"runID": {
						"type": "string",
						"defaultValue": "1"
					},
					"snapshotDate": {
						"type": "string",
						"defaultValue": "2021-07-11"
					}
				},
				"variables": {
					"v_status": {
						"type": "String",
						"defaultValue": "Success"
					},
					"v_stage": {
						"type": "String",
						"defaultValue": "SOURCE_TO_RAW"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-28T16:25:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL6_log_pipeline_metadata1_old')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL7_data_ingestion_json')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Ingest Webstore Online Sales Data into Data Lake ",
				"activities": [
					{
						"name": "copydataonline",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Online_adls_Sales_Json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DSdls_dataengineer_sales_Json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Set Sucess status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "copydataonline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_status",
							"value": "Success"
						}
					},
					{
						"name": "Set failed status_",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "copydataonline",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_status",
							"value": "failed"
						}
					},
					{
						"name": "PL6_log_pipeline_metadata_sucess",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set Sucess status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL6_log_pipeline_metadata1_old",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"snapshotDate": {
									"value": "@formatDateTime(pipeline().parameters.snapshotDate,'yyyy-MM-dd')",
									"type": "Expression"
								},
								"status": {
									"value": "@variables('v_status')",
									"type": "Expression"
								},
								"runID": {
									"value": "@pipeline().parameters.runID",
									"type": "Expression"
								},
								"sourcetoTargetID": "2",
								"PipelineTiggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"PipelineID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"systemCode": {
									"value": "@pipeline().parameters.SystemCode",
									"type": "Expression"
								},
								"datasetName": {
									"value": "@pipeline().parameters.DatasetName",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "PL6_log_pipeline_metadata_failed",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set failed status_",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL6_log_pipeline_metadata1_old",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"snapshotDate": {
									"value": "@formatDateTime(pipeline().parameters.snapshotDate,'yyyy-MM-dd')",
									"type": "Expression"
								},
								"status": {
									"value": "@variables('v_status')",
									"type": "Expression"
								},
								"runID": {
									"value": "@pipeline().parameters.runID",
									"type": "Expression"
								},
								"sourcetoTargetID": "2",
								"PipelineTiggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"PipelineID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"systemCode": {
									"value": "@pipeline().parameters.SystemCode",
									"type": "Expression"
								},
								"datasetName": {
									"value": "@pipeline().parameters.DatasetName",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SystemCode": {
						"type": "string",
						"defaultValue": "OWS"
					},
					"DatasetName": {
						"type": "string",
						"defaultValue": "Sales"
					},
					"runID": {
						"type": "string",
						"defaultValue": "1"
					},
					"snapshotDate": {
						"type": "string",
						"defaultValue": "2021-07-11"
					}
				},
				"variables": {
					"v_status": {
						"type": "String",
						"defaultValue": "Success"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-27T12:11:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL6_log_pipeline_metadata1_old')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL9_data_ingestion_dynamicdataset')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Ingest Webstore Online Sales Data into Data Lake ",
				"activities": [
					{
						"name": "copydataonline",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Online_adls_Sales_Json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DSdls_dataengineer_sales_Json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Set Sucess status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "copydataonline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_status",
							"value": "Success"
						}
					},
					{
						"name": "Set failed status_",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "copydataonline",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_status",
							"value": "failed"
						}
					},
					{
						"name": "PL6_log_pipeline_metadata_sucess",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set Sucess status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL6_log_pipeline_metadata1_old",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"snapshotDate": {
									"value": "@formatDateTime(pipeline().parameters.snapshotDate,'yyyy-MM-dd')",
									"type": "Expression"
								},
								"status": {
									"value": "@variables('v_status')",
									"type": "Expression"
								},
								"runID": {
									"value": "@pipeline().parameters.runID",
									"type": "Expression"
								},
								"sourcetoTargetID": "2",
								"PipelineTiggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"PipelineID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"systemCode": {
									"value": "@pipeline().parameters.SystemCode",
									"type": "Expression"
								},
								"datasetName": {
									"value": "@pipeline().parameters.DatasetName",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "PL6_log_pipeline_metadata_failed",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set failed status_",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL6_log_pipeline_metadata1_old",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"snapshotDate": {
									"value": "@formatDateTime(pipeline().parameters.snapshotDate,'yyyy-MM-dd')",
									"type": "Expression"
								},
								"status": {
									"value": "@variables('v_status')",
									"type": "Expression"
								},
								"runID": {
									"value": "@pipeline().parameters.runID",
									"type": "Expression"
								},
								"sourcetoTargetID": "2",
								"PipelineTiggerTime": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"PipelineID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"systemCode": {
									"value": "@pipeline().parameters.SystemCode",
									"type": "Expression"
								},
								"datasetName": {
									"value": "@pipeline().parameters.DatasetName",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SystemCode": {
						"type": "string",
						"defaultValue": "OWS"
					},
					"DatasetName": {
						"type": "string",
						"defaultValue": "Sales"
					},
					"runID": {
						"type": "string",
						"defaultValue": "1"
					},
					"snapshotDate": {
						"type": "string",
						"defaultValue": "2021-07-11"
					}
				},
				"variables": {
					"v_status": {
						"type": "String",
						"defaultValue": "Success"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-27T12:23:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL6_log_pipeline_metadata1_old')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_orch_daily_batch_run')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup get batch details",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[GetBatch]",
								"storedProcedureParameters": {
									"PFrequency": {
										"type": "String",
										"value": {
											"value": "@variables('v_frequency')",
											"type": "Expression"
										}
									},
									"PSystemCode": {
										"type": "String",
										"value": {
											"value": "@variables('v_sytemcode')",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_asql_batch_details",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach batch run information",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup get batch details",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup get batch details').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "PL11_data_ingestionv6_runingestion",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL11_data_ingestionv6",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SystemCode": {
												"value": "@variables('v_sytemcode')",
												"type": "Expression"
											},
											"DatasetName": {
												"value": "@item().datasetName",
												"type": "Expression"
											},
											"runID": {
												"value": "@item().RunId",
												"type": "Expression"
											},
											"snapshotDate": {
												"value": "@item().snapshotDate",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Stored procedure set batch status",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "PL11_data_ingestionv6_runingestion",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SetBatchStatus]",
										"storedProcedureParameters": {
											"PFrequency": {
												"value": {
													"value": "@variables('v_frequency')",
													"type": "Expression"
												},
												"type": "String"
											},
											"PSystemCode": {
												"value": {
													"value": "@variables('v_sytemcode')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_Azure_sql",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"v_frequency": {
						"type": "String",
						"defaultValue": "DAILY"
					},
					"v_sytemcode": {
						"type": "String",
						"defaultValue": "OWS"
					}
				},
				"folder": {
					"name": "orchestration"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-28T15:49:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL11_data_ingestionv6')]"
			]
		}
	]
}